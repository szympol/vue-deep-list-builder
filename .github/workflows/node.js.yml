name: Node.js CI

on:
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    container:
      image: node:18.15-alpine
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm ci --cache .npm --prefer-offline

      - name: Cache .npm
        uses: actions/cache@v2
        with:
          path: .npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}

      - name: Upload node_modules
        uses: actions/upload-artifact@v2
        with:
          name: node_modules
          path: node_modules
          retention-days: 1

  lint:
    runs-on: ubuntu-latest
    container:
      image: node:18.15-alpine
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download node_modules
        uses: actions/download-artifact@v2
        with:
          name: node_modules
          path: node_modules

      - name: Run lint
        run: npm run lint

  typecheck:
    runs-on: ubuntu-latest
    container:
      image: node:18.15-alpine
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download node_modules
        uses: actions/download-artifact@v2
        with:
          name: node_modules
          path: node_modules

      - name: Run typecheck
        run: npm run typecheck

  build:
    runs-on: ubuntu-latest
    container:
      image: node:18.15-alpine
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download node_modules
        uses: actions/download-artifact@v2
        with:
          name: node_modules
          path: node_modules

      - name: Run build
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: output
          path: .output

  test-unit:
    runs-on: ubuntu-latest
    container:
      image: node:18.15-alpine
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download node_modules
        uses: actions/download-artifact@v2
        with:
          name: node_modules
          path: node_modules

      - name: Run unit tests
        run: npm run test:unit:coverage

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: coverage
          retention-days: 1
          
  test-e2e:
    runs-on: ubuntu-latest
    needs: setup
    container:
      image: mcr.microsoft.com/playwright:v1.32.1-focal
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download node_modules
        uses: actions/download-artifact@v2
        with:
          name: node_modules
          path: node_modules

      - name: Run e2e tests
        run: npm run test:e2e:ci

      - name: Upload e2e test report artifacts
        uses: actions/upload-artifact@v2
        with:
          name: e2e-report
          path: e2e/report
          retention-days: 1
